# -- tmux 3.2 基础设置 -------------------------------------------------------

set -g  default-terminal "xterm-256color"  # 设置终端默认颜色支持!
set -sg escape-time 1                      # fastest command sequences
set -sg repeat-time 400                    # increase repeat timeout

# 前置键 绑定 解绑
set -g history-limit 10000 # 记录历史长度限制
set -g prefix C-q          # GNU-Screen compatible prefix
unbind C-b                 # 取消默认映射键
bind   C-q send-prefix     # 设置映射键为C-q

# tmux 设置-------------------------------------------------------------------

# reattach-to-user-namespace 用户命名空间，防止因为 shell 的用户空间非当前用户
if 'which -s reattach-to-user-namespace' 'set -g default-command "exec initializing... 2> /dev/null & reattach-to-user-namespace -l ${SHELL}"'

# 编辑 tmux 配置文件
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# 重新加载配置文件
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# 清除屏幕和历史
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# 设置24小时时间制
setw -g clock-mode-style 24

# activity
set -g bell-action none
set -g monitor-activity on
set -g visual-activity on

# -- 显示 --------------------------------------------------------------------

set  -g base-index 1              #  从编号 1 开始编排窗口
setw -g pane-base-index 1         #  使窗格编号与窗口一致
setw -g automatic-rename on       #  以当前程序重命名反映窗口
set  -g renumber-windows on       #  当窗口关闭时重新编号窗口
set  -g set-titles on             #  设置终端标题
set  -g set-titles-string '#S/#W' #  tab 显示内容
set  -g display-panes-time 800    #  窗格显示时间略长一些800毫秒
set  -g display-time 1000         #  显示时间略长一些1000毫秒
set  -g status-interval 10        #  每10秒重绘状态栏
set  -g focus-events on

# -- 使用导航 ----------------------------------------------------------------

# 创建新的会话
bind C-c new-session

# 根据当前窗格位置创建新的窗口
bind c new-window   -c    "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
unbind '"'
unbind %

# 窗格游标移动
bind -r h select-pane -L  # 左移
bind -r j select-pane -D  # 下移
bind -r k select-pane -U  # 上移
bind -r l select-pane -R  # 右移

# 窗格游标移动
bind -r C-h select-pane -L  # 左移
bind -r C-j select-pane -D  # 下移
bind -r C-k select-pane -U  # 上移
bind -r C-l select-pane -R  # 右移

# 调整窗格移动
bind -r < swap-pane -U
bind -r > swap-pane -D

bind -r n next-window
bind -r p previous-window
bind -r C-n next-window
bind -r C-p previous-window
bind -r C-i last-window
bind T break-pane

# 直接进入可视模式
bind v   copy-mode \; send-keys -X begin-selection
bind V   copy-mode \; send-keys -X select-line
bind C-v copy-mode \; send-keys -X rectangle-toggle \; send -X begin-selection
bind /   copy-mode \; command-prompt -T search -p "(search down)" { send-keys -X search-forward "%%" }
bind ?   copy-mode \; command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }

bind b   list-buffers  # 列出缓冲区粘贴数据
bind C-[ copy-mode     # 进入 copy-mode
bind P   choose-buffer # 选择缓冲区粘贴数据

# 同 window 下同步执行命令的开关
bind C-a set synchronize-panes \; display 'synchronize is now #{?pane_synchronized,on,off}'

# -- 复制模式 -----------------------------------------------------------------

# 使用 vim 键位方式
setw -g mode-keys vi
set  -g terminal-overrides 'xterm*:smcup@:rmcup@'
set  -g mouse on

unbind -T copy-mode-vi Space
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi C-v
bind   -T copy-mode-vi v     send-keys -X begin-selection
bind   -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind   -T copy-mode-vi C-v   send-keys -X rectangle-toggle \; send -X begin-selection
bind   -T copy-mode-vi Enter send-keys -X cancel
bind   -T copy-mode-vi C-l   send-keys -X cancel \; send-keys C-l \; run 'tmux clear-history'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n  'M-h' if-shell  "$is_vim"  "send-keys M-h"    "select-pane -L"
bind -n  'M-j' if-shell  "$is_vim"  "send-keys M-j"    "select-pane -D"
bind -n  'M-k' if-shell  "$is_vim"  "send-keys M-k"    "select-pane -U"
bind -n  'M-l' if-shell  "$is_vim"  "send-keys M-l"    "select-pane -R"
bind -n  M-\\  if-shell  "$is_vim"  "send-keys M-\\\\" "select-pane -l"

# -- 插件安装 ------------------------------------------------------------------------

# 默认需要引入的插件
set -g @plugin 'tmux-plugins/tpm'

# 状态保存，系统重启也能恢复
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir '~/.cache/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# 状态栏
set -g @plugin 'arcticicestudio/nord-tmux'

set -g @plugin 'IngoMeyer441/tmux-easy-motion'
set -g @easy-motion-prefix "Space"
set -g @easy-motion-default-motion "bd-f"

# 初始化tmux插件管理器(保证这行在~/.tmux.conf的非常靠后的位置)
run '~/.tmux/plugins/tpm/tpm'
